/*
* –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é getData, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∫–æ–ª–±–µ–∫–∏ –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è (`–ú–∏ —Ü–µ –∑—Ä–æ–±–∏–ª–∏, –ë—ñ–ª–ª—ñ - ${msg}`) —Ç–∞ –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ –ø–æ–º–∏–ª–∫–∏ (`–ö–µ–ø, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º–∞ - ${err}`).
 * –ó–∞–≤–¥–∞–Ω–Ω—è –ø–æ–≤–∏–Ω–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è —ñ–∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –≤ 1 —Å–µ–∫—É–Ω–¥—É.
 * –Ø–∫—â–æ —É—Å–ø—ñ—à–Ω–æ -  –ø–µ—Ä–µ–¥–∞—Ç–∏ –≤ –∫–æ–ª–±–µ–∫ '‚úÖ –°–£–ü–ï–†!', —è–∫—â–æ –Ω—ñ - '‚ùå –ü–û–ú–ò–õ–ö–ê!'

* –ü–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ –Ω–∞ Promise (—Å–ø–æ—á–∞—Ç–∫—É –∑ –¥–≤–æ–º–∞ –∫–æ–ª–±–µ–∫–∞–º–∏ –≤ then, –ø–æ—Ç—ñ–º –∑ catch)
 * –ü—Ä–∏ –±—É–¥—å-—è–∫–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤ –∫—ñ–Ω—Ü—ñ –≤–∏–≤–æ–¥–∏—Ç–∏ 'üöÄ Finished!'
*/

function getData() {
  return new Promise((resolve, reject) => {
    const isSuccess = Math.random() < 0.5;

    setTimeout(() => {
      if (!isSuccess) {
        resolve("‚úÖ –°–£–ü–ï–†!");
      } else {
        reject("‚ùå –ü–û–ú–ò–õ–ö–ê!");
      }
    }, 1000);
  });
}

getData().then(onSuccess).catch(onError).finally(onFinal);

function onSuccess(msg) {
  console.log(`–ú–∏ —Ü–µ –∑—Ä–æ–±–∏–ª–∏, –ë—ñ–ª–ª—ñ - ${msg}`);
}

function onError(err) {
  console.log(`–ö–µ–ø, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º–∞ - ${err}`);
}

function onFinal() {
  console.log("üöÄ Finished!");
}
